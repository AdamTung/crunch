/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.crunch.test;

@SuppressWarnings("all")
public class Person extends org.apache.avro.specific.SpecificRecordBase
		implements org.apache.avro.specific.SpecificRecord {
	public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser()
			.parse("{\"type\":\"record\",\"name\":\"Person\",\"namespace\":\"com.cloudera.crunch.test\",\"fields\":[{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"siblingnames\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
	@Deprecated
	public java.lang.CharSequence name;
	@Deprecated
	public int age;
	@Deprecated
	public java.util.List<java.lang.CharSequence> siblingnames;

	public org.apache.avro.Schema getSchema() {
		return SCHEMA$;
	}

	// Used by DatumWriter. Applications should not call.
	public java.lang.Object get(int field$) {
		switch (field$) {
		case 0:
			return name;
		case 1:
			return age;
		case 2:
			return siblingnames;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	// Used by DatumReader. Applications should not call.
	@SuppressWarnings(value = "unchecked")
	public void put(int field$, java.lang.Object value$) {
		switch (field$) {
		case 0:
			name = (java.lang.CharSequence) value$;
			break;
		case 1:
			age = (java.lang.Integer) value$;
			break;
		case 2:
			siblingnames = (java.util.List<java.lang.CharSequence>) value$;
			break;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	/**
	 * Gets the value of the 'name' field.
	 */
	public java.lang.CharSequence getName() {
		return name;
	}

	/**
	 * Sets the value of the 'name' field.
	 * 
	 * @param value
	 *          the value to set.
	 */
	public void setName(java.lang.CharSequence value) {
		this.name = value;
	}

	/**
	 * Gets the value of the 'age' field.
	 */
	public java.lang.Integer getAge() {
		return age;
	}

	/**
	 * Sets the value of the 'age' field.
	 * 
	 * @param value
	 *          the value to set.
	 */
	public void setAge(java.lang.Integer value) {
		this.age = value;
	}

	/**
	 * Gets the value of the 'siblingnames' field.
	 */
	public java.util.List<java.lang.CharSequence> getSiblingnames() {
		return siblingnames;
	}

	/**
	 * Sets the value of the 'siblingnames' field.
	 * 
	 * @param value
	 *          the value to set.
	 */
	public void setSiblingnames(java.util.List<java.lang.CharSequence> value) {
		this.siblingnames = value;
	}

}
